import{$ as e,r as m,bv as d}from"./index-G0XXQiiJ.js";const c=/^[\u4E00-\u9FA5a-zA-Z0-9_-]{4,16}$/,l=/^[1](([3][0-9])|([4][01456789])|([5][012356789])|([6][2567])|([7][0-8])|([8][0-9])|([9][012356789]))[0-9]{8}$/,f=/^\w{6,18}$/,g=/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,w=/^\d{6}$/,p=/(((^https?:(?:\/\/)?)(?:[-;:&=+$,\w]+@)?[A-Za-z0-9.-]+(?::\d+)?|(?:www.|[-;:&=+$,\w]+@)[A-Za-z0-9.-]+)((?:\/[+~%/.\w-_]*)?\??(?:[-+=&;%@.\w_]*)#?(?:[\w]*))?)$/;function h(){const a={userName:{pattern:c,message:e("form.userName.invalid"),trigger:"change"},phone:{pattern:l,message:e("form.phone.invalid"),trigger:"change"},pwd:{pattern:f,message:e("form.pwd.invalid"),trigger:"change"},code:{pattern:w,message:e("form.code.invalid"),trigger:"change"},email:{pattern:g,message:e("form.email.invalid"),trigger:"change"},url:{pattern:p,message:e("form.url.invalid"),trigger:"change"}},n={userName:[r(e("form.userName.required")),a.userName],phone:[r(e("form.phone.required")),a.phone],pwd:[r(e("form.pwd.required")),a.pwd],code:[r(e("form.code.required")),a.code],email:[r(e("form.email.required")),a.email],url:[r(e("form.url.required")),a.url]},t=r(e("form.required"));function r(i){return{required:!0,message:i}}function s(i){return[{required:!0,message:e("form.confirmPwd.required")},{asyncValidator:(u,o)=>o.trim()!==""&&o!==d(i)?Promise.reject(u.message):Promise.resolve(),message:e("form.confirmPwd.invalid"),trigger:"input"}]}return{patternRules:a,formRules:n,defaultRequiredRule:t,createRequiredRule:r,createConfirmPwdRule:s}}function q(){const a=m(null);async function n(){var r;await((r=a.value)==null?void 0:r.validate())}async function t(){var r;(r=a.value)==null||r.restoreValidation()}return{formRef:a,validate:n,restoreValidation:t}}export{l as R,h as a,q as u};
